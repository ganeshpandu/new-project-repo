name: Deploy to GCP VM

on:
  push:
    branches:
      - "main"

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Restore .env (local only, not used on server)
        run: echo "${{ secrets.ENV_FILE_BASE64 }}" | base64 --decode > .env

  build-and-push:
    needs: checkout
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Docker Auth
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build Image
        run: docker build -t us-central1-docker.pkg.dev/traeta-data/traeta-gar/traeta-backend:latest .

      - name: Push Image
        run: docker push us-central1-docker.pkg.dev/traeta-data/traeta-gar/traeta-backend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Prepare SSH Key
        run: |
          echo "${{ secrets.GCP_SSH_PRIVATE_KEY }}" > private_key
          chmod 600 private_key

      - name: Deploy
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key ${{ secrets.GCP_VM_USER }}@${{ secrets.GCP_VM_HOST }} << 'EOF'
          cd /home/${{ secrets.GCP_VM_USER }}/new-project-repo
          
          echo "${{ secrets.ENV_FILE_BASE64 }}" | base64 --decode > .env

          CURRENT_IMAGE=$(docker inspect --format='{{.Config.Image}}' traeta-backend 2>/dev/null || echo "none")

          if [ "$CURRENT_IMAGE" != "none" ]; then
            TIMESTAMP=$(date +%Y%m%d%H%M%S)
            docker tag $CURRENT_IMAGE $CURRENT_IMAGE-backup-$TIMESTAMP
          fi

          docker pull us-central1-docker.pkg.dev/traeta-data/traeta-gar/traeta-backend:latest

          docker-compose down || true
          docker-compose up -d --force-recreate
          EOF
